app: 'todo-app'
service: 'todo-app'
frameworkVersion: '3'

provider:
  name: aws
  stage: test
  runtime: python3.11
  timeout: 30
  region: us-east-1
  memorySize: 512
  architecture: arm64
  environment:
    STAGE: ${self:provider.stage}

    TODO_APP_DB: ms-todo-app
    TODO_APP_DB_PK: id
    TODO_APP_DB_SK: updated_at

# Upldoad just essential files to AWS Lambda
package:
  patterns:
    - '!./**'
    - src/**
    - '!src/**/__pycache__/**'
    - 'docs/**'

plugins:
  - serverless-dynamodb
  - serverless-offline

custom:
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - test
    start:
      host: 127.0.0.1
      port: 8001
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

# Add functions
functions:
  todo_app_gateway_handler:
    handler: src.main.todo_app_gateway_handler
    description: Todo app system gateway for different funtions
    events:
      - http:
          path: /docs/{path+} # Matches every path under /docs
          method: get
          cors:
            origin: '*'
            headers: '*'

      - http:
          path: '/{path+}' # Matches every path under /
          method: ANY
          cors:
            origin: '*'
            headers: '*'

resources:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-reference.html
  Resources:
    TodoAppDynamoDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TODO_APP_DB}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        BillingMode: 'PROVISIONED'
